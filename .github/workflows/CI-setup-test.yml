name: CI-setup-test
on:
  - push
  - pull_request
  - workflow_dispatch

jobs:

  test:
    name: "Test on GAP-${{ matrix.gap-version }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        gap-version:
          - latest
          - v4.15.0-beta1
          - master

    steps:
    
      - name: "Setup Cygwin"
        uses: gap-actions/setup-cygwin@v2
        if: ${{ matrix.os == 'windows-latest' }}
        with:
          extra-pkgs-to-install: 'pari'

      - name: "Install pari (windows)"
        shell: bash
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          wget https://pari.math.u-bordeaux.fr/pub/pari/unix/pari-2.17.2.tar.gz -O pari.tar.gz
          tar xzf pari.tar.gz
          cd pari-*
          ./Configure
          make
          make install
          
      - name: "Install pari (ubuntu)"
        shell: bash
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo apt-get install pari-gp --yes

      - name: "Install pari (macOS)"
        shell: bash
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install pari
        
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Setup GAP"
        uses: stertooy/setup-gap@towards-v3
        with:
          gap-version: ${{ matrix.gap-version }}

      - name: "Run package tests with minimal packages"
        uses: gap-actions/run-pkg-tests@v3
        with:
          only-needed: true
          warnings-as-errors: true

      - name: "Run package tests with default packages"
        uses: gap-actions/run-pkg-tests@v3
        with:
          warnings-as-errors: true

  validation:
    name: "Validate manual & metadata"
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name 

    steps:

      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Validate CITATION.cff"
        uses: citation-file-format/cffconvert-github-action@2.0.0
        with:
          args: "--validate"

      - name: "Setup GAP"
        uses: stertooy/setup-gap@towards-v3
        with:
          gap-version: ${{ matrix.gap-version }}

      - name: "Build manual"
        uses: gap-actions/build-pkg-docs@v1
        with:
          use-latex: true

      - name: "Validate PackageInfo.g"
        shell: bash
        run: gap -c "QuitGap(ValidatePackageInfo(\"PackageInfo.g\"));"

      - name: "Upload manual"
        uses: actions/upload-artifact@v4
        with:
          name: "Manual"
          path: ./doc/manual.pdf
          if-no-files-found: error
